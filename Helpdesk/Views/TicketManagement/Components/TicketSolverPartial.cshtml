@using Database.Repositories.Abstraction
@using Domain.Ticket.TicketChanges
@inject IUserRepository userRepository
@model Ticket

@{
    var ticket = Model;
}

<div class="container mt-3">
    <div class="card shadow-sm" style="min-width: 300px;">
        <div class="card-header bg-primary text-white">
            <h5>Řešitelé</h5>
        </div>
        <div class="card-body">
            <!-- Current Solver Info -->
            <p><strong>Přiřazený řešitel:</strong> <span class="badge bg-success">@Model.Solver?.UserName</span></p>
            <p><strong>Typ řešitele:</strong> @Model.Solver?.UserRole</p>

            <!-- Solver History -->
            <h6 class="mt-3">Historie</h6>
            <ul class="list-group list-group-flush">
                @{                    
                    List<SolverChange> changes = Model.SolverChanges;
                    @foreach(var change in changes)
                    {
                        <li class="border-1 list-group-item">
                            <strong>@change.Solver.UserName</strong> - @change.Description
                            <br />
                            <small class="text-muted">@change.TimeCreated.ToShortDateString()</small>
                        </li>
                    }                    
                }
            </ul>

            <!-- Change Solver Form -->
            <h6 class="mt-3">Změnit řešitele</h6>
            <form asp-action="ChangeSolver" method="post">
                <input type="hidden" name="ticketId" value="@Model.Id" />
                <select class="form-select mb-2" name="newSolver" required>
                    @foreach (var solver in await userRepository.GetByTypeAsync(Domain.User.UserType.Řešitel))
                    {
                        <option value="@solver">@solver</option>
                    }
                </select>
                <button type="submit" class="btn btn-primary w-100">Přiřadit řešitele</button>
            </form>
        </div>
    </div>
</div>